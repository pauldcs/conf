#!/usr/bin/python3
import lldb

# Import this module by running:
#     (lldb) command script import regs.py
#     (lldb) regs

def regs(
        debugger,
        command,
        result,
        internal_dict
    ):
    """
    LLDB module auto-generated by lldbmodgen on Mon Sep  9 00:40:46 CEST 2024.
    """

    def format_hex(value):
        """Formats a hexadecimal string by removing leading zeros."""
        try:
            return f"0x{int(value, 16):x}"
        except ValueError:
            return value
    
    target = lldb.debugger.GetSelectedTarget()
    process = target.GetProcess()
    thread = process.GetSelectedThread()
    
    frame = thread.GetFrameAtIndex(0)
    register_list = frame.GetRegisters()
    
    for reg_set in register_list:
        for reg in reg_set:
            reg_name = reg.GetName()
            reg_value = reg.GetValue()
            try:
                formatted_value = format_hex(reg_value)
                print("{:>8}: {:<20}".format(reg_name, formatted_value))
            except ValueError:
                pass

def __lldb_init_module(
        debugger,
        internal_dict
    ):
    debugger.HandleCommand('command script add -f regs.regs regs')
    print(' Installed: "regs"')

